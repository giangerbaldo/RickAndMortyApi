// Generated by Dagger (https://google.github.io/dagger).
package com.rickandmortyapi.ui.characterDetail;

import com.rickandmortyapi.data.repository.CharacterRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class CharacterDetailViewModelFactory_Factory
    implements Factory<CharacterDetailViewModelFactory> {
  private final Provider<CharacterRepository> characterRepositoryProvider;

  public CharacterDetailViewModelFactory_Factory(
      Provider<CharacterRepository> characterRepositoryProvider) {
    this.characterRepositoryProvider = characterRepositoryProvider;
  }

  @Override
  public CharacterDetailViewModelFactory get() {
    return provideInstance(characterRepositoryProvider);
  }

  public static CharacterDetailViewModelFactory provideInstance(
      Provider<CharacterRepository> characterRepositoryProvider) {
    return new CharacterDetailViewModelFactory(characterRepositoryProvider.get());
  }

  public static CharacterDetailViewModelFactory_Factory create(
      Provider<CharacterRepository> characterRepositoryProvider) {
    return new CharacterDetailViewModelFactory_Factory(characterRepositoryProvider);
  }

  public static CharacterDetailViewModelFactory newCharacterDetailViewModelFactory(
      CharacterRepository characterRepository) {
    return new CharacterDetailViewModelFactory(characterRepository);
  }
}
