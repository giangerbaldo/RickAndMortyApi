// Generated by Dagger (https://google.github.io/dagger).
package com.rickandmortyapi.di;

import com.rickandmortyapi.data.local.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModules_ProvidesRickAndMortyDatabaseFactory implements Factory<AppDatabase> {
  private final AppModules module;

  public AppModules_ProvidesRickAndMortyDatabaseFactory(AppModules module) {
    this.module = module;
  }

  @Override
  public AppDatabase get() {
    return provideInstance(module);
  }

  public static AppDatabase provideInstance(AppModules module) {
    return proxyProvidesRickAndMortyDatabase(module);
  }

  public static AppModules_ProvidesRickAndMortyDatabaseFactory create(AppModules module) {
    return new AppModules_ProvidesRickAndMortyDatabaseFactory(module);
  }

  public static AppDatabase proxyProvidesRickAndMortyDatabase(AppModules instance) {
    return Preconditions.checkNotNull(
        instance.providesRickAndMortyDatabase(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
